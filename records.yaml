motivation:
  text: >-
    I'm a curious developer with a particular loyalty to Python,
    although I'll use whatever tool is best for the job. If I
    learn something new I like to learn how to use it properly.
    That means: beautiful interfaces; no fear for refactoring;
    and, of course, following the style guidelines(!).

globalme2:
  title: Full Stack Developer
  subtitle: Globalme
  dates: May 2018 - July 2018
  bullets:
    - Managed hosted infrastructure via AWS
    - Adapted the back end code for authentication via AWS Cognito
    - Developed a SPA for database administration (CRUD operations)
    - Automated various manual processes by creating a library of Photoshop plugins in Javascript
    - "Technologies: Python, Flask, Javascript (JQuery and ExtendScript), AWS, PostgreSQL"

globalme:
  title: Automation Engineer
  subtitle: Globalme, contracted by Intel
  dates: November 2017 - May 2018
  bullets:
    - Managed migration of test development from India to Vancouver
    - Refactored large code base (~15000 LOC) to be more maintainable
    - Established processes – code review, development phases – for the team in Vancouver
    - Mentored (including leading training sessions in Git and Python) a team of 9 manual testers
    - "Technologies: Python, Robot Framework"

ultrahaptics:
  title: DevOps Engineer
  subtitle: Ultrahaptics
  dates: February 2017 - August 2017
  bullets:
    - Maintained Teamcity CI pipeline, including Windows and Macintosh machines (~10 nodes)
    - Delivered a proof-of-concept CD pipeline for building and deploying VMs
    - "Technologies: Ansible, Python, Bash, Powershell"

cisco:
  title: Software Engineer
  subtitle: Cisco, formerly Acano
  dates: October 2014 - July 2016
  bullets:
    - Analysed VOIP deployments to determine root cause of test failures
    - Drove adoption of agile work style by championing test automation
    - Developed a “write once, run anywhere” test framework covering mobile, desktop and web
    - Planned comprehensive testing strategy (including CI with remote teams) for next-gen product
    - "Technologies: Python, Java (including Android SDK), Groovy, Bash"

desy:
  title: Summer Studentship Computing Program
  subtitle: DESY
  dates: July 2013 – August 2013
  bullets:
    - Programmatically analyzed the erosion of heart implants via computer vision
    - Studied and worked with the world's most brilliant x-ray source in Hamburg, Germany
    - Streamlined research by creating an RPC endpoint for sharing experimental data
    - "Technologies: Python (including the SciPy toolkit), WSDL"

pysh:
  title: Experiments with Bash and Python
  subtitle: https://github.com/oscarbyrne/pysh
  text: >-
    I often find projects start with a Bash script. It's a great language
    for stitching together external tools or doing weird things with the file system.
    Despite that certain operations might as well be black magic in terms of readability,
    and sometimes a feature just isn't there (no hash tables before Bash 4?!).
    That's why I came up with a tool - Pysh - which gives you a persistent
    Python interpreter which is easily accessed inline from Bash. This was a great
    learning experience for me where I gained an appreciation for the difference
    between in- and out-of-band signalling, and what exactly a fifo is good for.

pysh-short:
  title: Bash-embedded Python
  subtitle: https://github.com/oscarbyrne/pysh
  text: >-
    Pysh is a tool I created in a bid to elegantly embed Python into Bash. This was a great
    learning experience for me where I gained an appreciation for the difference
    between in- and out-of-band signalling, and what exactly a fifo is good for.

notes:
  title: Music theory with Python
  subtitle: https://github.com/oscarbyrne/notes
  text: >-
    I have a number of hobbyist projects using Python, but the one which I am most
    happy about (aka the most recent!) is a tool for composers which classifies
    musical objects according to 'musical set theory'. In this project I have come
    to realise how the abstract base classes for containers defined in the standard
    library can be used to cleanly define custom classes. It is also a good example
    of how I try to keep method definitions to be 5 lines or less, often with the
    help of Python's excellent itertools module.

pyatonic:
  title: Advanced music theory with Python
  subtitle: https://github.com/oscarbyrne/pyatonic
  text: >-
    Music theory is one of my passions. I've recently had the opportunity to dive deep
    into some of the concepts I've been reading about, requiring working knowledge in a
    host of new concepts from category theory to tree search algorithms. The result is
    a library of methods ultimately able to demonstrate computational creativity (yes!)
    by conceptually "blending" musical chords, an algorithm developed as recently as 2015.
    The code itself showcases my ability to write in a pythonic style: making heavy use
    of generators, a mastery of Python's data model, and avoiding the over-reliance
    on classes often found with junior developers.

resume:
  title: Resume builder
  subtitle: https://github.com/oscarbyrne/cv
  text: >-
    When job hunting I find I spend an inordinate amount of time formatting my resume.
    To cut down on this time I created a library which creates beautifully-formatted
    resumes in the time it takes to hit my enter key. By storing the important data
    - job records and document layout - in a series of easily-editable config files
    and generating responsive HTML5 via a Jinja2 template, I create first-class resumes
    in an instant. You're reading one right now!

degree:
  title: MSCi Physics
  subtitle: University of Birmingham
  dates: 2010 - 2014
  text: >-
    For my fourth year project I became involved with front-line research
    in metamaterials, and contributed to a project which was presented
    as part of the PIERS conference 2014 in China. I chose mostly
    computing-related modules, including:
  bullets:
    - Computational Modelling of Physical Systems
    - Teaching in Schools
    - Image Processing

interests:
  bullets:
    - Silver smithing, rockhounding and lapidary
    - Producing electronic music
    - Hiking (like everybody else in Canada!)

references:
  subtitle: References are available on request